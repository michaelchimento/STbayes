% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_user_STb.R
\name{import_user_STb}
\alias{import_user_STb}
\title{import_user_STb: Create STbayes_data object from user supplied data}
\usage{
import_user_STb(
  diffusion_data,
  networks,
  ILV_metadata = NULL,
  ILVi = NULL,
  ILVs = NULL,
  ILVm = NULL
)
}
\arguments{
\item{diffusion_data}{dataframe with columns id, trial, time, max_time}

\item{networks}{dataframe with columns trial, from, to, and one or more columns of edge weights named descriptively. Optionally an integer time column can be provided for dynamic network analysis, although networks must be provided for each time period between transmission events.}

\item{ILV_metadata}{optional dataframe with columns id, and any individual-level variables that might be of interest}

\item{ILVi}{Optional character vector of column names from ILV metadata to be considered when estimating asocial learning rate. If not specified, all ILV are applied to both.}

\item{ILVs}{Optional character vector of column names from ILV metadata to be considered when estimating social learning rate. If not specified, all ILV are applied to both.}

\item{ILVm}{Optional character vector of column names from ILV metadata to be considered in a multiplicative model.}
}
\value{
A list object containing properly formatted data to run social transmission models.
}
\description{
import_user_STb: Create STbayes_data object from user supplied data
}
\examples{
#very mock data
diffusion_data <- data.frame(
  id = c("A", "B", "C", "D", "E", "F"),
  trial = c(1, 1, 1, 2, 2, 2),
  time = c(0, 1, 2, 0, 1, 4),
  max_time = c(3, 3, 3, 4, 4, 4)
)
networks <- data.frame(
  trial = c(1, 1, 1, 2, 2, 2),
  from = c("A", "A", "B", "D", "D", "E"),
  to = c("B", "C", "C", "E", "F", "F"),
  kin = c(1, 0, 1, 0, 1, 1),
  inverse_distance = c(0, 1, .5, .25, .1, 0)
)
ILV_metadata <- data.frame(
  id = c("A", "B", "C", "D", "E", "F"),
  age = c(2, 3, 4, 2, 5, 6),
  sex = c(0, 1, 1, 0, 1, 0) # Factor ILVs must be input as numeric
  weight = c(0.5, .25, .3, 0, -.2, -.4)
)
imported_data <- import_user_STb(
  diffusion_data = diffusion_data,
  networks = networks,
  ILV_metadata = ILV_metadata,
  ILVi = c("age"), # Use only 'age' for asocial learning
  ILVs = c("sex") # Use only 'sex' for social learning
  ILVm = c("weight") # Use weight for multiplicative effect on asocial and social learning
)

}
